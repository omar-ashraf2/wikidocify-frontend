{"ast":null,"code":"var _jsxFileName = \"/home/msweelam/Work/projects/project-based-training/wikidocify/ui/src/context/DocContext.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { createContext, useContext, useState, useCallback, useEffect } from 'react';\nimport { useLocalStorage } from '../hooks/useLocalStorage';\nimport { useDebounce } from '../hooks/useDebounce';\nimport { extractTitle } from '../utils/markdown';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DocContext = /*#__PURE__*/createContext();\nconst DEFAULT_MARKDOWN = `# Your Documentation\n\nStart writing your documentation here...\n\n## Features\n- Easy Markdown editing\n- Live preview\n- Collaboration through comments\n- Publishing options\n\n## Getting Started\n1. Write your content in the editor\n2. Preview your changes in real-time\n3. Share with collaborators for feedback\n4. Publish when ready\n\n## Examples\n\n### Code Block Example\n\\`\\`\\`javascript\nfunction helloWorld() {\n  console.log('Hello, Documentation System!');\n}\n\\`\\`\\`\n\n### Table Example\n| Feature | Description |\n|---------|-------------|\n| Editor | Markdown editor with syntax highlighting |\n| Preview | Real-time preview of your content |\n| Comments | Collaborative feedback system |\n| Publishing | One-click publishing to share your work |\n`;\nexport function DocProvider({\n  children\n}) {\n  _s();\n  // Main document state\n  const [markdown, setMarkdownRaw] = useLocalStorage('doc-content', DEFAULT_MARKDOWN);\n  const [title, setTitle] = useState(() => extractTitle(markdown));\n  const [showPreview, setShowPreview] = useLocalStorage('doc-show-preview', true);\n  const [comments, setComments] = useLocalStorage('doc-comments', []);\n  const [savedStatus, setSavedStatus] = useState('saved'); // 'saved', 'saving', 'unsaved'\n  const [documentId, setDocumentId] = useLocalStorage('doc-id', `doc-${Date.now()}`);\n  const [documentHistory, setDocumentHistory] = useLocalStorage('doc-history', []);\n  const [currentHistoryIndex, setCurrentHistoryIndex] = useState(-1);\n\n  // Document metadata\n  const [lastSaved, setLastSaved] = useState(Date.now());\n\n  // Debounce markdown changes to avoid excessive localStorage writes\n  const debouncedMarkdown = useDebounce(markdown, 1000);\n\n  // Update title whenever markdown changes (debounced)\n  useEffect(() => {\n    setTitle(extractTitle(debouncedMarkdown));\n  }, [debouncedMarkdown]);\n\n  // Simulate autosave functionality\n  useEffect(() => {\n    setSavedStatus('saving');\n    const timeout = setTimeout(() => {\n      setSavedStatus('saved');\n      setLastSaved(Date.now());\n\n      // Add to history if content has changed\n      if (documentHistory.length === 0 || documentHistory[documentHistory.length - 1].content !== debouncedMarkdown) {\n        const newHistory = [...documentHistory];\n        if (newHistory.length >= 50) {\n          newHistory.shift(); // Remove oldest entry if we have too many\n        }\n        newHistory.push({\n          timestamp: Date.now(),\n          content: debouncedMarkdown\n        });\n        setDocumentHistory(newHistory);\n        setCurrentHistoryIndex(newHistory.length - 1);\n      }\n    }, 1500);\n    return () => clearTimeout(timeout);\n  }, [debouncedMarkdown, documentHistory, setDocumentHistory]);\n\n  // Update markdown content\n  const updateMarkdown = useCallback(content => {\n    setMarkdownRaw(content);\n    setSavedStatus('unsaved');\n  }, [setMarkdownRaw]);\n\n  // Toggle preview\n  const togglePreview = useCallback(() => {\n    setShowPreview(prev => !prev);\n  }, [setShowPreview]);\n\n  // Add a comment\n  const addComment = useCallback((text, author = 'User') => {\n    const newComment = {\n      id: Date.now(),\n      text,\n      author,\n      timestamp: new Date().toISOString()\n    };\n    setComments(prev => [...prev, newComment]);\n  }, [setComments]);\n\n  // Delete a comment\n  const deleteComment = useCallback(commentId => {\n    setComments(prev => prev.filter(comment => comment.id !== commentId));\n  }, [setComments]);\n\n  // Publishing functionality\n  const publishDoc = useCallback(async () => {\n    setSavedStatus('saving');\n\n    // Simulate API call\n    await new Promise(resolve => setTimeout(resolve, 1000));\n    setSavedStatus('saved');\n    return {\n      success: true,\n      documentId,\n      title,\n      url: `https://docs.example.com/published/${documentId}`\n    };\n  }, [documentId, title]);\n\n  // Sharing functionality\n  const shareDoc = useCallback(async () => {\n    // Simulate API call\n    await new Promise(resolve => setTimeout(resolve, 500));\n    return {\n      success: true,\n      documentId,\n      title,\n      shareLink: `https://docs.example.com/shared/${documentId}`\n    };\n  }, [documentId, title]);\n\n  // Undo/Redo functionality\n  const canUndo = currentHistoryIndex > 0;\n  const canRedo = currentHistoryIndex < documentHistory.length - 1;\n  const undo = useCallback(() => {\n    if (!canUndo) return;\n    const newIndex = currentHistoryIndex - 1;\n    setCurrentHistoryIndex(newIndex);\n    setMarkdownRaw(documentHistory[newIndex].content);\n  }, [canUndo, currentHistoryIndex, documentHistory, setMarkdownRaw]);\n  const redo = useCallback(() => {\n    if (!canRedo) return;\n    const newIndex = currentHistoryIndex + 1;\n    setCurrentHistoryIndex(newIndex);\n    setMarkdownRaw(documentHistory[newIndex].content);\n  }, [canRedo, currentHistoryIndex, documentHistory, setMarkdownRaw]);\n\n  // Create a new document\n  const createNewDocument = useCallback(() => {\n    const newDocId = `doc-${Date.now()}`;\n    setDocumentId(newDocId);\n    setMarkdownRaw(DEFAULT_MARKDOWN);\n    setComments([]);\n    setDocumentHistory([]);\n    setCurrentHistoryIndex(-1);\n  }, [setDocumentId, setMarkdownRaw, setComments, setDocumentHistory]);\n  return /*#__PURE__*/_jsxDEV(DocContext.Provider, {\n    value: {\n      markdown,\n      title,\n      showPreview,\n      comments,\n      savedStatus,\n      lastSaved,\n      documentId,\n      canUndo,\n      canRedo,\n      updateMarkdown,\n      togglePreview,\n      addComment,\n      deleteComment,\n      publishDoc,\n      shareDoc,\n      undo,\n      redo,\n      createNewDocument\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 176,\n    columnNumber: 5\n  }, this);\n}\n_s(DocProvider, \"EfNHzi3WqOcEcVWPO6OLk/gxe5w=\", false, function () {\n  return [useLocalStorage, useLocalStorage, useLocalStorage, useLocalStorage, useLocalStorage, useDebounce];\n});\n_c = DocProvider;\nexport const useDoc = () => {\n  _s2();\n  return useContext(DocContext);\n};\n_s2(useDoc, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"DocProvider\");","map":{"version":3,"names":["createContext","useContext","useState","useCallback","useEffect","useLocalStorage","useDebounce","extractTitle","jsxDEV","_jsxDEV","DocContext","DEFAULT_MARKDOWN","DocProvider","children","_s","markdown","setMarkdownRaw","title","setTitle","showPreview","setShowPreview","comments","setComments","savedStatus","setSavedStatus","documentId","setDocumentId","Date","now","documentHistory","setDocumentHistory","currentHistoryIndex","setCurrentHistoryIndex","lastSaved","setLastSaved","debouncedMarkdown","timeout","setTimeout","length","content","newHistory","shift","push","timestamp","clearTimeout","updateMarkdown","togglePreview","prev","addComment","text","author","newComment","id","toISOString","deleteComment","commentId","filter","comment","publishDoc","Promise","resolve","success","url","shareDoc","shareLink","canUndo","canRedo","undo","newIndex","redo","createNewDocument","newDocId","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useDoc","_s2","$RefreshReg$"],"sources":["/home/msweelam/Work/projects/project-based-training/wikidocify/ui/src/context/DocContext.jsx"],"sourcesContent":["import { createContext, useContext, useState, useCallback, useEffect } from 'react';\nimport { useLocalStorage } from '../hooks/useLocalStorage';\nimport { useDebounce } from '../hooks/useDebounce';\nimport { extractTitle } from '../utils/markdown';\n\nconst DocContext = createContext();\n\nconst DEFAULT_MARKDOWN = `# Your Documentation\n\nStart writing your documentation here...\n\n## Features\n- Easy Markdown editing\n- Live preview\n- Collaboration through comments\n- Publishing options\n\n## Getting Started\n1. Write your content in the editor\n2. Preview your changes in real-time\n3. Share with collaborators for feedback\n4. Publish when ready\n\n## Examples\n\n### Code Block Example\n\\`\\`\\`javascript\nfunction helloWorld() {\n  console.log('Hello, Documentation System!');\n}\n\\`\\`\\`\n\n### Table Example\n| Feature | Description |\n|---------|-------------|\n| Editor | Markdown editor with syntax highlighting |\n| Preview | Real-time preview of your content |\n| Comments | Collaborative feedback system |\n| Publishing | One-click publishing to share your work |\n`;\n\nexport function DocProvider({ children }) {\n  // Main document state\n  const [markdown, setMarkdownRaw] = useLocalStorage('doc-content', DEFAULT_MARKDOWN);\n  const [title, setTitle] = useState(() => extractTitle(markdown));\n  const [showPreview, setShowPreview] = useLocalStorage('doc-show-preview', true);\n  const [comments, setComments] = useLocalStorage('doc-comments', []);\n  const [savedStatus, setSavedStatus] = useState('saved'); // 'saved', 'saving', 'unsaved'\n  const [documentId, setDocumentId] = useLocalStorage('doc-id', `doc-${Date.now()}`);\n  const [documentHistory, setDocumentHistory] = useLocalStorage('doc-history', []);\n  const [currentHistoryIndex, setCurrentHistoryIndex] = useState(-1);\n\n  // Document metadata\n  const [lastSaved, setLastSaved] = useState(Date.now());\n  \n  // Debounce markdown changes to avoid excessive localStorage writes\n  const debouncedMarkdown = useDebounce(markdown, 1000);\n  \n  // Update title whenever markdown changes (debounced)\n  useEffect(() => {\n    setTitle(extractTitle(debouncedMarkdown));\n  }, [debouncedMarkdown]);\n  \n  // Simulate autosave functionality\n  useEffect(() => {\n    setSavedStatus('saving');\n    const timeout = setTimeout(() => {\n      setSavedStatus('saved');\n      setLastSaved(Date.now());\n      \n      // Add to history if content has changed\n      if (documentHistory.length === 0 || documentHistory[documentHistory.length - 1].content !== debouncedMarkdown) {\n        const newHistory = [...documentHistory];\n        if (newHistory.length >= 50) {\n          newHistory.shift(); // Remove oldest entry if we have too many\n        }\n        newHistory.push({\n          timestamp: Date.now(),\n          content: debouncedMarkdown\n        });\n        setDocumentHistory(newHistory);\n        setCurrentHistoryIndex(newHistory.length - 1);\n      }\n    }, 1500);\n    \n    return () => clearTimeout(timeout);\n  }, [debouncedMarkdown, documentHistory, setDocumentHistory]);\n  \n  // Update markdown content\n  const updateMarkdown = useCallback((content) => {\n    setMarkdownRaw(content);\n    setSavedStatus('unsaved');\n  }, [setMarkdownRaw]);\n  \n  // Toggle preview\n  const togglePreview = useCallback(() => {\n    setShowPreview(prev => !prev);\n  }, [setShowPreview]);\n  \n  // Add a comment\n  const addComment = useCallback((text, author = 'User') => {\n    const newComment = {\n      id: Date.now(),\n      text,\n      author,\n      timestamp: new Date().toISOString(),\n    };\n    setComments(prev => [...prev, newComment]);\n  }, [setComments]);\n  \n  // Delete a comment\n  const deleteComment = useCallback((commentId) => {\n    setComments(prev => prev.filter(comment => comment.id !== commentId));\n  }, [setComments]);\n  \n  // Publishing functionality\n  const publishDoc = useCallback(async () => {\n    setSavedStatus('saving');\n    \n    // Simulate API call\n    await new Promise(resolve => setTimeout(resolve, 1000));\n    \n    setSavedStatus('saved');\n    return {\n      success: true,\n      documentId,\n      title,\n      url: `https://docs.example.com/published/${documentId}`\n    };\n  }, [documentId, title]);\n  \n  // Sharing functionality\n  const shareDoc = useCallback(async () => {\n    // Simulate API call\n    await new Promise(resolve => setTimeout(resolve, 500));\n    \n    return {\n      success: true,\n      documentId,\n      title,\n      shareLink: `https://docs.example.com/shared/${documentId}`\n    };\n  }, [documentId, title]);\n  \n  // Undo/Redo functionality\n  const canUndo = currentHistoryIndex > 0;\n  const canRedo = currentHistoryIndex < documentHistory.length - 1;\n  \n  const undo = useCallback(() => {\n    if (!canUndo) return;\n    \n    const newIndex = currentHistoryIndex - 1;\n    setCurrentHistoryIndex(newIndex);\n    setMarkdownRaw(documentHistory[newIndex].content);\n  }, [canUndo, currentHistoryIndex, documentHistory, setMarkdownRaw]);\n  \n  const redo = useCallback(() => {\n    if (!canRedo) return;\n    \n    const newIndex = currentHistoryIndex + 1;\n    setCurrentHistoryIndex(newIndex);\n    setMarkdownRaw(documentHistory[newIndex].content);\n  }, [canRedo, currentHistoryIndex, documentHistory, setMarkdownRaw]);\n  \n  // Create a new document\n  const createNewDocument = useCallback(() => {\n    const newDocId = `doc-${Date.now()}`;\n    setDocumentId(newDocId);\n    setMarkdownRaw(DEFAULT_MARKDOWN);\n    setComments([]);\n    setDocumentHistory([]);\n    setCurrentHistoryIndex(-1);\n  }, [setDocumentId, setMarkdownRaw, setComments, setDocumentHistory]);\n  \n  return (\n    <DocContext.Provider\n      value={{\n        markdown,\n        title,\n        showPreview,\n        comments,\n        savedStatus,\n        lastSaved,\n        documentId,\n        canUndo,\n        canRedo,\n        updateMarkdown,\n        togglePreview,\n        addComment,\n        deleteComment,\n        publishDoc,\n        shareDoc,\n        undo,\n        redo,\n        createNewDocument,\n      }}\n    >\n      {children}\n    </DocContext.Provider>\n  );\n}\n\nexport const useDoc = () => useContext(DocContext);"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}